<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd">

        <context:annotation-config></context:annotation-config>
        <context:component-scan base-package="org.example.service"/>

        <context:property-placeholder location="classpath:db.properties"/>
        <!--阿里巴巴提供的数据库连接池-->
        <bean id="datasource_bean" class="com.alibaba.druid.pool.DruidDataSource">
                <property name="driverClassName" value="${db.driver}"/>
                <property name="url" value="${db.url}"/>
                <property name="username" value="${db.username}"/>
                <property name="password" value="${db.password}"/>
                <property name="initialSize" value="${druid.initialPoolSize}"/>
                <property name="maxActive" value="${druid.maxPoolSize}"/>
                <property name="minIdle" value="${druid.minPoolSize}"/>
        </bean>
        <!--依赖于数据源-->
        <bean id="sqlSessionFactory_bean" class="org.mybatis.spring.SqlSessionFactoryBean">
                <property name="dataSource" ref="datasource_bean"/>
                <property name="configLocation" value="classpath:mybatis-config.xml"/>
        </bean>
        <!--扫描mapper下所有的包是否可以归到ioc容器中作为bean出现-->
        <!--关联sqlSessionFactory-->
        <bean id="mapper_bean" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_bean"/>
                <property name="basePackage" value="org.example.mapper"/>
        </bean>
</beans>
